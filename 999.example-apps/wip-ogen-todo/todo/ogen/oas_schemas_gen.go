// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"time"

	"github.com/go-faster/errors"
)

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTodosFilterGetPriority returns new OptTodosFilterGetPriority with value set to v.
func NewOptTodosFilterGetPriority(v TodosFilterGetPriority) OptTodosFilterGetPriority {
	return OptTodosFilterGetPriority{
		Value: v,
		Set:   true,
	}
}

// OptTodosFilterGetPriority is optional TodosFilterGetPriority.
type OptTodosFilterGetPriority struct {
	Value TodosFilterGetPriority
	Set   bool
}

// IsSet returns true if OptTodosFilterGetPriority was set.
func (o OptTodosFilterGetPriority) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTodosFilterGetPriority) Reset() {
	var v TodosFilterGetPriority
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTodosFilterGetPriority) SetTo(v TodosFilterGetPriority) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTodosFilterGetPriority) Get() (v TodosFilterGetPriority, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTodosFilterGetPriority) Or(d TodosFilterGetPriority) TodosFilterGetPriority {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTodosFilterGetStatus returns new OptTodosFilterGetStatus with value set to v.
func NewOptTodosFilterGetStatus(v TodosFilterGetStatus) OptTodosFilterGetStatus {
	return OptTodosFilterGetStatus{
		Value: v,
		Set:   true,
	}
}

// OptTodosFilterGetStatus is optional TodosFilterGetStatus.
type OptTodosFilterGetStatus struct {
	Value TodosFilterGetStatus
	Set   bool
}

// IsSet returns true if OptTodosFilterGetStatus was set.
func (o OptTodosFilterGetStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTodosFilterGetStatus) Reset() {
	var v TodosFilterGetStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTodosFilterGetStatus) SetTo(v TodosFilterGetStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTodosFilterGetStatus) Get() (v TodosFilterGetStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTodosFilterGetStatus) Or(d TodosFilterGetStatus) TodosFilterGetStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// TodosFilterGetBadRequest is response for TodosFilterGet operation.
type TodosFilterGetBadRequest struct{}

func (*TodosFilterGetBadRequest) todosFilterGetRes() {}

type TodosFilterGetOKApplicationJSON []TodosFilterGetOKItem

func (*TodosFilterGetOKApplicationJSON) todosFilterGetRes() {}

type TodosFilterGetOKItem struct {
	ID          OptInt    `json:"id"`
	Title       OptString `json:"title"`
	Description OptString `json:"description"`
	Status      OptString `json:"status"`
	Priority    OptString `json:"priority"`
}

// GetID returns the value of ID.
func (s *TodosFilterGetOKItem) GetID() OptInt {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *TodosFilterGetOKItem) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *TodosFilterGetOKItem) GetDescription() OptString {
	return s.Description
}

// GetStatus returns the value of Status.
func (s *TodosFilterGetOKItem) GetStatus() OptString {
	return s.Status
}

// GetPriority returns the value of Priority.
func (s *TodosFilterGetOKItem) GetPriority() OptString {
	return s.Priority
}

// SetID sets the value of ID.
func (s *TodosFilterGetOKItem) SetID(val OptInt) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *TodosFilterGetOKItem) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *TodosFilterGetOKItem) SetDescription(val OptString) {
	s.Description = val
}

// SetStatus sets the value of Status.
func (s *TodosFilterGetOKItem) SetStatus(val OptString) {
	s.Status = val
}

// SetPriority sets the value of Priority.
func (s *TodosFilterGetOKItem) SetPriority(val OptString) {
	s.Priority = val
}

type TodosFilterGetPriority string

const (
	TodosFilterGetPriorityLOW    TodosFilterGetPriority = "LOW"
	TodosFilterGetPriorityMEDIUM TodosFilterGetPriority = "MEDIUM"
	TodosFilterGetPriorityHIGH   TodosFilterGetPriority = "HIGH"
)

// AllValues returns all TodosFilterGetPriority values.
func (TodosFilterGetPriority) AllValues() []TodosFilterGetPriority {
	return []TodosFilterGetPriority{
		TodosFilterGetPriorityLOW,
		TodosFilterGetPriorityMEDIUM,
		TodosFilterGetPriorityHIGH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TodosFilterGetPriority) MarshalText() ([]byte, error) {
	switch s {
	case TodosFilterGetPriorityLOW:
		return []byte(s), nil
	case TodosFilterGetPriorityMEDIUM:
		return []byte(s), nil
	case TodosFilterGetPriorityHIGH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TodosFilterGetPriority) UnmarshalText(data []byte) error {
	switch TodosFilterGetPriority(data) {
	case TodosFilterGetPriorityLOW:
		*s = TodosFilterGetPriorityLOW
		return nil
	case TodosFilterGetPriorityMEDIUM:
		*s = TodosFilterGetPriorityMEDIUM
		return nil
	case TodosFilterGetPriorityHIGH:
		*s = TodosFilterGetPriorityHIGH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TodosFilterGetStatus string

const (
	TodosFilterGetStatusUNFINISHED TodosFilterGetStatus = "UNFINISHED"
	TodosFilterGetStatusCOMPLETED  TodosFilterGetStatus = "COMPLETED"
)

// AllValues returns all TodosFilterGetStatus values.
func (TodosFilterGetStatus) AllValues() []TodosFilterGetStatus {
	return []TodosFilterGetStatus{
		TodosFilterGetStatusUNFINISHED,
		TodosFilterGetStatusCOMPLETED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TodosFilterGetStatus) MarshalText() ([]byte, error) {
	switch s {
	case TodosFilterGetStatusUNFINISHED:
		return []byte(s), nil
	case TodosFilterGetStatusCOMPLETED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TodosFilterGetStatus) UnmarshalText(data []byte) error {
	switch TodosFilterGetStatus(data) {
	case TodosFilterGetStatusUNFINISHED:
		*s = TodosFilterGetStatusUNFINISHED
		return nil
	case TodosFilterGetStatusCOMPLETED:
		*s = TodosFilterGetStatusCOMPLETED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TodosGetOKItem struct {
	ID          OptInt      `json:"id"`
	Title       OptString   `json:"title"`
	Description OptString   `json:"description"`
	Status      OptString   `json:"status"`
	Priority    OptString   `json:"priority"`
	CreatedAt   OptDateTime `json:"created_at"`
	UpdatedAt   OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *TodosGetOKItem) GetID() OptInt {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *TodosGetOKItem) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *TodosGetOKItem) GetDescription() OptString {
	return s.Description
}

// GetStatus returns the value of Status.
func (s *TodosGetOKItem) GetStatus() OptString {
	return s.Status
}

// GetPriority returns the value of Priority.
func (s *TodosGetOKItem) GetPriority() OptString {
	return s.Priority
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TodosGetOKItem) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TodosGetOKItem) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *TodosGetOKItem) SetID(val OptInt) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *TodosGetOKItem) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *TodosGetOKItem) SetDescription(val OptString) {
	s.Description = val
}

// SetStatus sets the value of Status.
func (s *TodosGetOKItem) SetStatus(val OptString) {
	s.Status = val
}

// SetPriority sets the value of Priority.
func (s *TodosGetOKItem) SetPriority(val OptString) {
	s.Priority = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TodosGetOKItem) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TodosGetOKItem) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// TodosIDCompletePostNotFound is response for TodosIDCompletePost operation.
type TodosIDCompletePostNotFound struct{}

func (*TodosIDCompletePostNotFound) todosIDCompletePostRes() {}

// TodosIDCompletePostOK is response for TodosIDCompletePost operation.
type TodosIDCompletePostOK struct{}

func (*TodosIDCompletePostOK) todosIDCompletePostRes() {}

// TodosIDDeleteNoContent is response for TodosIDDelete operation.
type TodosIDDeleteNoContent struct{}

func (*TodosIDDeleteNoContent) todosIDDeleteRes() {}

// TodosIDDeleteNotFound is response for TodosIDDelete operation.
type TodosIDDeleteNotFound struct{}

func (*TodosIDDeleteNotFound) todosIDDeleteRes() {}

// TodosIDGetNotFound is response for TodosIDGet operation.
type TodosIDGetNotFound struct{}

func (*TodosIDGetNotFound) todosIDGetRes() {}

type TodosIDGetOK struct {
	ID          OptInt      `json:"id"`
	Title       OptString   `json:"title"`
	Description OptString   `json:"description"`
	Status      OptString   `json:"status"`
	Priority    OptString   `json:"priority"`
	CreatedAt   OptDateTime `json:"created_at"`
	UpdatedAt   OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *TodosIDGetOK) GetID() OptInt {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *TodosIDGetOK) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *TodosIDGetOK) GetDescription() OptString {
	return s.Description
}

// GetStatus returns the value of Status.
func (s *TodosIDGetOK) GetStatus() OptString {
	return s.Status
}

// GetPriority returns the value of Priority.
func (s *TodosIDGetOK) GetPriority() OptString {
	return s.Priority
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TodosIDGetOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TodosIDGetOK) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *TodosIDGetOK) SetID(val OptInt) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *TodosIDGetOK) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *TodosIDGetOK) SetDescription(val OptString) {
	s.Description = val
}

// SetStatus sets the value of Status.
func (s *TodosIDGetOK) SetStatus(val OptString) {
	s.Status = val
}

// SetPriority sets the value of Priority.
func (s *TodosIDGetOK) SetPriority(val OptString) {
	s.Priority = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TodosIDGetOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TodosIDGetOK) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*TodosIDGetOK) todosIDGetRes() {}

// TodosIDPatchNotFound is response for TodosIDPatch operation.
type TodosIDPatchNotFound struct{}

func (*TodosIDPatchNotFound) todosIDPatchRes() {}

// TodosIDPatchOK is response for TodosIDPatch operation.
type TodosIDPatchOK struct{}

func (*TodosIDPatchOK) todosIDPatchRes() {}

type TodosIDPatchReq struct {
	Title       OptString `json:"title"`
	Description OptString `json:"description"`
}

// GetTitle returns the value of Title.
func (s *TodosIDPatchReq) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *TodosIDPatchReq) GetDescription() OptString {
	return s.Description
}

// SetTitle sets the value of Title.
func (s *TodosIDPatchReq) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *TodosIDPatchReq) SetDescription(val OptString) {
	s.Description = val
}

// TodosIDPriorityPatchNotFound is response for TodosIDPriorityPatch operation.
type TodosIDPriorityPatchNotFound struct{}

func (*TodosIDPriorityPatchNotFound) todosIDPriorityPatchRes() {}

// TodosIDPriorityPatchOK is response for TodosIDPriorityPatch operation.
type TodosIDPriorityPatchOK struct{}

func (*TodosIDPriorityPatchOK) todosIDPriorityPatchRes() {}

type TodosIDPriorityPatchReq struct {
	Priority TodosIDPriorityPatchReqPriority `json:"priority"`
}

// GetPriority returns the value of Priority.
func (s *TodosIDPriorityPatchReq) GetPriority() TodosIDPriorityPatchReqPriority {
	return s.Priority
}

// SetPriority sets the value of Priority.
func (s *TodosIDPriorityPatchReq) SetPriority(val TodosIDPriorityPatchReqPriority) {
	s.Priority = val
}

type TodosIDPriorityPatchReqPriority string

const (
	TodosIDPriorityPatchReqPriorityLOW    TodosIDPriorityPatchReqPriority = "LOW"
	TodosIDPriorityPatchReqPriorityMEDIUM TodosIDPriorityPatchReqPriority = "MEDIUM"
	TodosIDPriorityPatchReqPriorityHIGH   TodosIDPriorityPatchReqPriority = "HIGH"
)

// AllValues returns all TodosIDPriorityPatchReqPriority values.
func (TodosIDPriorityPatchReqPriority) AllValues() []TodosIDPriorityPatchReqPriority {
	return []TodosIDPriorityPatchReqPriority{
		TodosIDPriorityPatchReqPriorityLOW,
		TodosIDPriorityPatchReqPriorityMEDIUM,
		TodosIDPriorityPatchReqPriorityHIGH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TodosIDPriorityPatchReqPriority) MarshalText() ([]byte, error) {
	switch s {
	case TodosIDPriorityPatchReqPriorityLOW:
		return []byte(s), nil
	case TodosIDPriorityPatchReqPriorityMEDIUM:
		return []byte(s), nil
	case TodosIDPriorityPatchReqPriorityHIGH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TodosIDPriorityPatchReqPriority) UnmarshalText(data []byte) error {
	switch TodosIDPriorityPatchReqPriority(data) {
	case TodosIDPriorityPatchReqPriorityLOW:
		*s = TodosIDPriorityPatchReqPriorityLOW
		return nil
	case TodosIDPriorityPatchReqPriorityMEDIUM:
		*s = TodosIDPriorityPatchReqPriorityMEDIUM
		return nil
	case TodosIDPriorityPatchReqPriorityHIGH:
		*s = TodosIDPriorityPatchReqPriorityHIGH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TodosIDReopenPostNotFound is response for TodosIDReopenPost operation.
type TodosIDReopenPostNotFound struct{}

func (*TodosIDReopenPostNotFound) todosIDReopenPostRes() {}

// TodosIDReopenPostOK is response for TodosIDReopenPost operation.
type TodosIDReopenPostOK struct{}

func (*TodosIDReopenPostOK) todosIDReopenPostRes() {}

// TodosIDTagsDeleteNoContent is response for TodosIDTagsDelete operation.
type TodosIDTagsDeleteNoContent struct{}

func (*TodosIDTagsDeleteNoContent) todosIDTagsDeleteRes() {}

// TodosIDTagsDeleteNotFound is response for TodosIDTagsDelete operation.
type TodosIDTagsDeleteNotFound struct{}

func (*TodosIDTagsDeleteNotFound) todosIDTagsDeleteRes() {}

// TodosIDTagsPostNotFound is response for TodosIDTagsPost operation.
type TodosIDTagsPostNotFound struct{}

func (*TodosIDTagsPostNotFound) todosIDTagsPostRes() {}

// TodosIDTagsPostOK is response for TodosIDTagsPost operation.
type TodosIDTagsPostOK struct{}

func (*TodosIDTagsPostOK) todosIDTagsPostRes() {}

type TodosIDTagsPostReq struct {
	TagId int `json:"tagId"`
}

// GetTagId returns the value of TagId.
func (s *TodosIDTagsPostReq) GetTagId() int {
	return s.TagId
}

// SetTagId sets the value of TagId.
func (s *TodosIDTagsPostReq) SetTagId(val int) {
	s.TagId = val
}

// TodosPostBadRequest is response for TodosPost operation.
type TodosPostBadRequest struct{}

func (*TodosPostBadRequest) todosPostRes() {}

// TodosPostCreated is response for TodosPost operation.
type TodosPostCreated struct{}

func (*TodosPostCreated) todosPostRes() {}

type TodosPostReq struct {
	Title       string    `json:"title"`
	Description OptString `json:"description"`
}

// GetTitle returns the value of Title.
func (s *TodosPostReq) GetTitle() string {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *TodosPostReq) GetDescription() OptString {
	return s.Description
}

// SetTitle sets the value of Title.
func (s *TodosPostReq) SetTitle(val string) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *TodosPostReq) SetDescription(val OptString) {
	s.Description = val
}

// UsersIDDeleteNoContent is response for UsersIDDelete operation.
type UsersIDDeleteNoContent struct{}

func (*UsersIDDeleteNoContent) usersIDDeleteRes() {}

// UsersIDDeleteNotFound is response for UsersIDDelete operation.
type UsersIDDeleteNotFound struct{}

func (*UsersIDDeleteNotFound) usersIDDeleteRes() {}

// UsersIDGetNotFound is response for UsersIDGet operation.
type UsersIDGetNotFound struct{}

func (*UsersIDGetNotFound) usersIDGetRes() {}

type UsersIDGetOK struct {
	ID    OptInt    `json:"id"`
	Name  OptString `json:"name"`
	Email OptString `json:"email"`
	Role  OptString `json:"role"`
}

// GetID returns the value of ID.
func (s *UsersIDGetOK) GetID() OptInt {
	return s.ID
}

// GetName returns the value of Name.
func (s *UsersIDGetOK) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UsersIDGetOK) GetEmail() OptString {
	return s.Email
}

// GetRole returns the value of Role.
func (s *UsersIDGetOK) GetRole() OptString {
	return s.Role
}

// SetID sets the value of ID.
func (s *UsersIDGetOK) SetID(val OptInt) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UsersIDGetOK) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UsersIDGetOK) SetEmail(val OptString) {
	s.Email = val
}

// SetRole sets the value of Role.
func (s *UsersIDGetOK) SetRole(val OptString) {
	s.Role = val
}

func (*UsersIDGetOK) usersIDGetRes() {}

// UsersPostBadRequest is response for UsersPost operation.
type UsersPostBadRequest struct{}

func (*UsersPostBadRequest) usersPostRes() {}

// UsersPostCreated is response for UsersPost operation.
type UsersPostCreated struct{}

func (*UsersPostCreated) usersPostRes() {}

type UsersPostReq struct {
	Name     string `json:"name"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetName returns the value of Name.
func (s *UsersPostReq) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UsersPostReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *UsersPostReq) GetPassword() string {
	return s.Password
}

// SetName sets the value of Name.
func (s *UsersPostReq) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UsersPostReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *UsersPostReq) SetPassword(val string) {
	s.Password = val
}
